WhateverFirstSearch(s):
   put s into the bag
   while the bag is not empty:
    take v from the bag
    if v is unmarked:
        mark v
        for vw from s:
            put w into the bag




recursively:

DFS(v)

if v is unmarked
    mark v
    for each edge vâ†’w
        DFS(w)



Note
  1- If we implement the bag using a stack, it's called depth first search. So algorithm runs in O(E + V).
  2- If we implement the bag using queue, it becomes breadth first search. Algorithm runs in O(E + v).
  3. If we implement the bag using priority queue[aka heap] (like for example, based on minimum weights of an edge), it becomes Best first search and runs in O(v + ElogE).

  space is O(V);